{"version":3,"file":"static/js/202.ad2d79c0.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { cancelFrame, frame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get timeline() {\n            return animation.timeline;\n        },\n        set timeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.13.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.13.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.13.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","frame","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","push","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","timestamp","stop","cancelFrame","now","frameData","isProcessing","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","addUniqueItem","item","removeItem","index","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}