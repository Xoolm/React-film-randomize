{"version":3,"file":"static/js/609.56b74379.chunk.js","mappings":"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","sources":["webpack://react-film-randomize/./src/components/FilmWinner/_FilmWinner.module.scss?5032","components/FilmWinner/FilmWinner.tsx","webpack://react-film-randomize/./src/components/Games/Random_card_out/components/_FilmCard.module.scss?6304","components/Games/Random_card_out/components/RandomCard.tsx","hooks/useShuffle.ts","pages/AnimatedPages.tsx","components/Games/Random_wheel/components/RandomWheel.tsx","components/Games/Random_wheel/RandomWheelWrapp.tsx","components/Games/Random_card_out/RandomCardOutWrapp.tsx","components/Games/MysteryCardWrapp/components/MysteryCard.tsx","components/Games/MysteryCardWrapp/MysteryCardWrapp.tsx","pages/GamesPage/Games.tsx","webpack://react-film-randomize/./src/components/Games/MysteryCardWrapp/_MysteryCardWrapp.module.scss?5d1c","webpack://react-film-randomize/./src/components/Games/MysteryCardWrapp/components/_MysteryCard.module.scss?668a","webpack://react-film-randomize/./src/components/Games/Random_card_out/_RandomCardOut.module.scss?5728","webpack://react-film-randomize/./src/components/Games/Random_wheel/_RandomWheelWrapp.module.scss?eba9","webpack://react-film-randomize/./src/pages/GamesPage/_Games.module.scss?7928"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmWinner\":\"_FilmWinner_filmWinner__Ut8VV\",\"cardChoice\":\"_FilmWinner_cardChoice__cQuiC\",\"confetti\":\"_FilmWinner_confetti__qVUEA\",\"confettiPiece\":\"_FilmWinner_confettiPiece__ax0qw\",\"makeItRain\":\"_FilmWinner_makeItRain__+PNLk\"};","import { FC } from \"react\";\r\nimport Winner from \"./_FilmWinner.module.scss\";\r\nimport { IFilm } from \"../../models/IFilm\";\r\n\r\ninterface FilmCard {\r\n  winner?: IFilm;\r\n}\r\n\r\nconst FilmWinner: FC<FilmCard> = ({ winner }) => {\r\n  return (\r\n    <div className={Winner.confetti}>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.filmWinner}>{winner?.option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmWinner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"_FilmCard_filmCard__aSUp8\",\"cardChoice\":\"_FilmCard_cardChoice__nuEa0\",\"filmCardOut\":\"_FilmCard_filmCardOut__hTHJr\",\"CardOut\":\"_FilmCard_CardOut__Vgabo\"};","import React, { FC, useEffect, useState } from \"react\";\r\nimport { IFilm } from \"../../../../models/IFilm\";\r\nimport Card from \"./_FilmCard.module.scss\";\r\n\r\ninterface FilmCard {\r\n  film: IFilm;\r\n  droppedOut: number;\r\n}\r\n\r\nconst RandomCard: FC<FilmCard> = ({ film, droppedOut }) => {\r\n  const [hideWinner, setHideWinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (droppedOut === film.id) {\r\n      setHideWinner(true);\r\n    }\r\n  }, [droppedOut]);\r\n\r\n  return (\r\n    <div className={hideWinner ? Card.filmCardOut : Card.filmCard}>\r\n      <div className={Card.filmCard__title}>{film.option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomCard;\r\n","import { IFilm } from \"../models/IFilm\";\r\n\r\nfunction useShuffle(array: IFilm[]) {\r\n  let m = array?.length,\r\n    t,\r\n    i;\r\n  while (m) {\r\n    i = Math.floor(Math.random() * m--);\r\n    t = array[m];\r\n    array[m] = array[i];\r\n    array[i] = t;\r\n  }\r\n  return array;\r\n}\r\n\r\nexport { useShuffle };\r\n","import { motion } from \"framer-motion\";\r\nimport React, { FC } from \"react\";\r\n\r\ntype ChildProps = { children: React.ReactElement };\r\n\r\nconst animations = {\r\n  initial: { opacity: 0, x: 50 },\r\n  animate: { opacity: 1, x: 0 },\r\n  exit: { opacity: 0, x: -50 },\r\n};\r\n\r\nconst AnimatedPage: FC<ChildProps> = ({ children }) => {\r\n  return (\r\n    <motion.div\r\n      variants={animations}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default AnimatedPage;\r\n","import { FC } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\nimport { IFilm } from \"../../../../models/IFilm\";\r\n\r\ninterface WheelProps {\r\n  filmPlate: IFilm[];\r\n  prizeNumber: number;\r\n  mustSpin: boolean;\r\n  setMustSpin: (arg0: boolean) => void;\r\n}\r\n\r\nconst RandomWheel: FC<WheelProps> = ({\r\n  filmPlate,\r\n  prizeNumber,\r\n  mustSpin,\r\n  setMustSpin,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Wheel\r\n        mustStartSpinning={mustSpin}\r\n        prizeNumber={prizeNumber}\r\n        data={filmPlate}\r\n        outerBorderWidth={1}\r\n        radiusLineWidth={1}\r\n        innerRadius={11}\r\n        fontSize={10}\r\n        textDistance={55}\r\n        backgroundColors={[\"#020518\"]}\r\n        textColors={[\"white\"]}\r\n        innerBorderColor={\"red\"}\r\n        radiusLineColor={\"#ec8dc7\"}\r\n        outerBorderColor={\"rgba(238, 141, 200, 1)\"}\r\n        onStopSpinning={() => {\r\n          setMustSpin(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomWheel;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport { getRandNum } from \"../../../services/RandomOrgAPI\";\r\nimport RandomWheel from \"./components/RandomWheel\";\r\nimport Wheel from \"./_RandomWheelWrapp.module.scss\";\r\nimport { Button } from \"@mui/material\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\n\r\ninterface RandomWheelProps {\r\n  winner?: IFilm;\r\n  winnerBool: boolean;\r\n  setWinnerBool: (arg0: boolean) => void;\r\n}\r\n\r\nconst RandomWheelWrapp: FC<RandomWheelProps> = ({\r\n  winner,\r\n  winnerBool,\r\n  setWinnerBool,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { numbers, filmPlate, setFilmPlate, setAllFilms, allFilms } =\r\n    useContext(NumbersContext);\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [idFIlmWinner, setIdFIlmWinner] = useState<any>();\r\n  const [prizeNumber, setPrizeNumber] = useState<any>();\r\n  const [getRandom, { data: random, isSuccess }] =\r\n    getRandNum.useLazyGetRandNumQuery();\r\n  const randomNum = random?.result?.random?.data;\r\n\r\n  const handleSpinClick = async () => {\r\n    if (mustSpin) {\r\n      return mustSpin;\r\n    } else {\r\n      await getRandom(numbers?.length);\r\n      setMustSpin(true);\r\n    }\r\n  };\r\n  console.log(filmPlate);\r\n  useEffect(() => {\r\n    filmPlate?.map((film) => {\r\n      let index = filmPlate.findIndex((el) => el.id === numbers[randomNum!]);\r\n      return setPrizeNumber(index);\r\n    });\r\n    setIdFIlmWinner(numbers[randomNum!]);\r\n    isSuccess &&\r\n      setTimeout(() => {\r\n        setFilmPlate(filmPlate?.filter((film) => film.id !== idFIlmWinner));\r\n      }, 12500);\r\n  }, [random, idFIlmWinner]);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={Wheel.randomWheelWrapp}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={Wheel.wheelWrapper}>\r\n          <RandomWheel\r\n            setMustSpin={setMustSpin}\r\n            mustSpin={mustSpin}\r\n            prizeNumber={prizeNumber}\r\n            filmPlate={filmPlate}\r\n          />\r\n          <Button className={Wheel.addWinner} onClick={handleSpinClick}>\r\n            {t(\"gamesPage.randomWheel.button\")}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomWheelWrapp;\r\n","import { FC, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport CardOut from \"./_RandomCardOut.module.scss\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\nimport { getRandNum } from \"../../../services/RandomOrgAPI\";\r\nimport RandomCard from \"./components/RandomCard\";\r\nimport { Button } from \"@mui/material\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface RandomCardOutWrappProps {\r\n  winnerBool: boolean;\r\n  winner?: IFilm;\r\n}\r\n\r\nconst RandomCardOutWrapp: FC<RandomCardOutWrappProps> = ({\r\n  winnerBool,\r\n  winner,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { allFilms, numbers, filmPlate, setFilmPlate } =\r\n    useContext(NumbersContext);\r\n  const [getRandom, { data: random }] = getRandNum.useLazyGetRandNumQuery();\r\n  const [droppedOut, setDroppedOut] = useState<any>();\r\n\r\n  const pickAWinner = async () => {\r\n    await getRandom(numbers?.length);\r\n  };\r\n  console.log(filmPlate);\r\n\r\n  useEffect(() => {\r\n    filmPlate?.map((film) => {\r\n      return setDroppedOut(numbers[random?.result.random.data!]);\r\n    });\r\n    setFilmPlate(filmPlate?.filter((film) => film.id !== droppedOut));\r\n  }, [random, droppedOut]);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={CardOut.winnerWrapper}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={CardOut.randomCardWrapp}>\r\n          {allFilms &&\r\n            allFilms.map((film) => (\r\n              <RandomCard key={film.id} film={film} droppedOut={droppedOut} />\r\n            ))}\r\n          <Button className={CardOut.addWinner_button} onClick={pickAWinner}>\r\n            {t(\"gamesPage.randomCardOutWrapp.button\")}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomCardOutWrapp;\r\n","import { FC, useState } from \"react\";\r\nimport { IFilm } from \"../../../../models/IFilm\";\r\nimport Card from \"./_MysteryCard.module.scss\";\r\n\r\ninterface FilmCard {\r\n  film: IFilm;\r\n  onDelete: (id: number) => void;\r\n}\r\n\r\nconst MysteryCard: FC<FilmCard> = ({ film, onDelete }) => {\r\n  const [hideWinner, setHideWinner] = useState(false);\r\n  const handleDelete = () => {\r\n    onDelete(film.id);\r\n    setHideWinner(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={hideWinner ? Card.filmCardOut : Card.filmCard}\r\n      onClick={handleDelete}\r\n    >\r\n      <div className={hideWinner ? Card.isFlipped : Card.card}>\r\n        <div className={Card.filmCard__back}>\r\n          {/* <div className={Card.filmCard__author}>{film.id}</div> */}\r\n          <div className={Card.filmCard__title}>{film.option}</div>\r\n        </div>\r\n        <div className={Card.filmCard__front}>\r\n          <div className={Card.filmCard__author}>?</div>\r\n          {/* <div className={Card.filmCard__title}></div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MysteryCard;\r\n","import { FC, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport Mystery from \"./_MysteryCardWrapp.module.scss\";\r\nimport MysteryCard from \"./components/MysteryCard\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useShuffle } from \"../../../hooks/useShuffle\";\r\n\r\ninterface MysteryCardOutWrappProps {\r\n  winnerBool: boolean;\r\n  winner?: IFilm;\r\n}\r\n\r\nconst MysteryCardWrapp: FC<MysteryCardOutWrappProps> = ({\r\n  winnerBool,\r\n  winner,\r\n}) => {\r\n  const { allFilms, filmPlate, setFilmPlate } = useContext(NumbersContext);\r\n  const [mysteryCard, setMysteryCard] = useState<IFilm[]>();\r\n  const shuffleAarray = [...allFilms];\r\n  const shafle = useShuffle(shuffleAarray!);\r\n  useMemo(() => setMysteryCard(shafle), [allFilms]);\r\n  const handleDelete = (id: number) => {\r\n    setFilmPlate(filmPlate.filter((film: IFilm) => film.id !== id));\r\n  };\r\n  console.log(filmPlate);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={Mystery.winnerWrapper}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={Mystery.mysteryCardWrapp}>\r\n          {mysteryCard &&\r\n            mysteryCard.map((film) => (\r\n              <MysteryCard onDelete={handleDelete} key={film.id} film={film} />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MysteryCardWrapp;\r\n","import Games from \"./_Games.module.scss\";\r\nimport AnimatedPage from \"../AnimatedPages\";\r\nimport { Container } from \"@mui/material\";\r\nimport RandomWheelWrapp from \"../../components/Games/Random_wheel/RandomWheelWrapp\";\r\nimport RandomCardOutWrapp from \"../../components/Games/Random_card_out/RandomCardOutWrapp\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport MysteryCardWrapp from \"../../components/Games/MysteryCardWrapp/MysteryCardWrapp\";\r\nimport { NumbersContext } from \"../../context\";\r\nimport Select from \"react-select\";\r\nimport \"../../style/_custom-select-games.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IFilm } from \"../../models/IFilm\";\r\n\r\nconst FilmsTemplate = () => {\r\n  const { t } = useTranslation();\r\n  const [game, setGame] = useState<any>(0);\r\n  const { filmPlate, setAllFilms, allFilms } = useContext(NumbersContext);\r\n  const [winnerBool, setWinnerBool] = useState(false);\r\n  const [winner, setWinner] = useState<IFilm>();\r\n  useEffect(() => {\r\n    if (filmPlate.length === 0) {\r\n      setGame(4);\r\n    }\r\n  }, []);\r\n\r\n  const options = [\r\n    { value: 1, label: t(\"gamesPage.select.eliminationCards\") },\r\n    { value: 2, label: t(\"gamesPage.select.randomWheel\") },\r\n    { value: 3, label: t(\"gamesPage.select.choiceCard\") },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (game.value === 2) {\r\n      if (filmPlate?.length === 1) {\r\n        setTimeout(() => {\r\n          setWinnerBool(true);\r\n          filmPlate.map((film) => {\r\n            setWinner(film);\r\n            const updateFilms = allFilms.filter((item) => item.id !== film.id);\r\n            const newAllFilms = updateFilms.map((film) => {\r\n              if (film.value === 10) {\r\n                return {\r\n                  ...film,\r\n                  value: 10,\r\n                  optionSize: 1,\r\n                  quantity: 10,\r\n                };\r\n              } else {\r\n                return {\r\n                  ...film,\r\n                  value: film.value + 1,\r\n                  optionSize: film.optionSize - 1,\r\n                  quantity: Math.floor(100 - film.value * 10),\r\n                };\r\n              }\r\n            });\r\n            setAllFilms(newAllFilms);\r\n          });\r\n        }, 0);\r\n      }\r\n    } else {\r\n      if (filmPlate?.length === 1) {\r\n        setTimeout(() => {\r\n          setWinnerBool(true);\r\n          filmPlate.map((film) => {\r\n            setWinner(film);\r\n            const updateFilms = allFilms.filter((item) => item.id !== film.id);\r\n            const newAllFilms = updateFilms.map((film) => {\r\n              if (film.value === 10) {\r\n                return {\r\n                  ...film,\r\n                  value: 10,\r\n                  optionSize: 1,\r\n                  quantity: 10,\r\n                };\r\n              } else {\r\n                return {\r\n                  ...film,\r\n                  value: film.value + 1,\r\n                  optionSize: film.optionSize - 1,\r\n                  quantity: Math.floor(100 - film.value * 10),\r\n                };\r\n              }\r\n            });\r\n            setAllFilms(newAllFilms);\r\n          });\r\n        }, 3500);\r\n      }\r\n    }\r\n  }, [allFilms, filmPlate]);\r\n\r\n  return (\r\n    <AnimatedPage>\r\n      <div className={Games.FilmsChoisePage__background}>\r\n        <></>\r\n        <Container\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Select\r\n            className={Games.select}\r\n            classNamePrefix=\"customSelect\"\r\n            isDisabled={game === 4 || game === 5 ? true : false}\r\n            isSearchable={false}\r\n            options={options}\r\n            value={game}\r\n            onChange={setGame}\r\n            placeholder={\r\n              game === 0\r\n                ? t(\"gamesPage.select.placeholder1\")\r\n                : t(\"gamesPage.select.placeholder2\")\r\n            }\r\n            styles={{\r\n              control: (baseStyles) => ({\r\n                ...baseStyles,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 30px\",\r\n              }),\r\n            }}\r\n          />\r\n          <div className={Games.templateWrapp}>\r\n            <div className={Games.alert}>\r\n              {game === 0 ? (\r\n                <h3>{t(\"gamesPage.addingMessage.chooseAGame\")}</h3>\r\n              ) : null}\r\n              {game === 4 ? (\r\n                <h3>{t(\"gamesPage.addingMessage.YouHaveNotAddedAnyMovies\")}</h3>\r\n              ) : null}\r\n              {game === 5 ? (\r\n                <h3>\r\n                  {t(\"gamesPage.addingMessage.addingOneMovieDoesNotMakeSense\")}\r\n                </h3>\r\n              ) : null}\r\n            </div>\r\n            {game.value === 1 ? (\r\n              <RandomCardOutWrapp winner={winner} winnerBool={winnerBool} />\r\n            ) : null}\r\n            {game.value === 3 ? (\r\n              <MysteryCardWrapp winner={winner} winnerBool={winnerBool} />\r\n            ) : null}\r\n            {game.value === 2 ? (\r\n              <RandomWheelWrapp\r\n                winner={winner}\r\n                winnerBool={winnerBool}\r\n                setWinnerBool={setWinnerBool}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </AnimatedPage>\r\n  );\r\n};\r\n\r\nexport default FilmsTemplate;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mysteryCardWrapp\":\"_MysteryCardWrapp_mysteryCardWrapp__Xkh-R\",\"winnerWrapper\":\"_MysteryCardWrapp_winnerWrapper__GFtQU\"};","// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"_MysteryCard_filmCard__gwvys\",\"shake\":\"_MysteryCard_shake__VOIvZ\",\"card\":\"_MysteryCard_card__yblMf\",\"filmCard__front\":\"_MysteryCard_filmCard__front__jc+17\",\"filmCard__back\":\"_MysteryCard_filmCard__back__9KdpV\",\"neon-1\":\"_MysteryCard_neon-1__Idxea\",\"isFlipped\":\"_MysteryCard_isFlipped__RBto9\",\"filmCardOut\":\"_MysteryCard_filmCardOut__CbVLQ\",\"CardOut\":\"_MysteryCard_CardOut__oXVMW\"};","// extracted by mini-css-extract-plugin\nexport default {\"randomCardWrapp\":\"_RandomCardOut_randomCardWrapp__TOq6S\",\"addWinner_button\":\"_RandomCardOut_addWinner_button__Cu7sP\",\"winnerWrapper\":\"_RandomCardOut_winnerWrapper__WyJSm\"};","// extracted by mini-css-extract-plugin\nexport default {\"randomWheelWrapp\":\"_RandomWheelWrapp_randomWheelWrapp__3IuJ7\",\"wheelWrapper\":\"_RandomWheelWrapp_wheelWrapper__SKAOU\",\"addWinner\":\"_RandomWheelWrapp_addWinner__ufkc9\"};","// extracted by mini-css-extract-plugin\nexport default {\"FilmsChoisePage__background\":\"_Games_FilmsChoisePage__background__-skW2\",\"select\":\"_Games_select__aqdRO\",\"templateWrapp\":\"_Games_templateWrapp__KtAF-\",\"alert\":\"_Games_alert__+uPGX\",\"filmsWrapp\":\"_Games_filmsWrapp__P8h5r\"};"],"names":["_ref","winner","_jsxs","className","Winner","children","_jsx","option","film","droppedOut","hideWinner","setHideWinner","useState","useEffect","id","Card","filmCardOut","filmCard","filmCard__title","useShuffle","array","t","i","m","length","Math","floor","random","animations","initial","opacity","x","animate","exit","motion","div","variants","transition","duration","filmPlate","prizeNumber","mustSpin","setMustSpin","_Fragment","Wheel","mustStartSpinning","data","outerBorderWidth","radiusLineWidth","innerRadius","fontSize","textDistance","backgroundColors","textColors","innerBorderColor","radiusLineColor","outerBorderColor","onStopSpinning","_random$result","_random$result$random","winnerBool","setWinnerBool","useTranslation","numbers","setFilmPlate","setAllFilms","allFilms","useContext","NumbersContext","idFIlmWinner","setIdFIlmWinner","setPrizeNumber","getRandom","isSuccess","getRandNum","useLazyGetRandNumQuery","randomNum","result","console","log","map","index","findIndex","el","setTimeout","filter","randomWheelWrapp","FilmWinner","wheelWrapper","RandomWheel","Button","addWinner","onClick","async","setDroppedOut","CardOut","winnerWrapper","randomCardWrapp","RandomCard","addWinner_button","onDelete","handleDelete","isFlipped","card","filmCard__back","filmCard__front","filmCard__author","mysteryCard","setMysteryCard","shuffleAarray","shafle","useMemo","Mystery","mysteryCardWrapp","MysteryCard","FilmsTemplate","game","setGame","setWinner","options","value","label","newAllFilms","item","optionSize","quantity","AnimatedPage","Games","FilmsChoisePage__background","Container","sx","display","flexDirection","alignItems","Select","select","classNamePrefix","isDisabled","isSearchable","onChange","placeholder","styles","control","baseStyles","borderRadius","padding","templateWrapp","alert","RandomCardOutWrapp","MysteryCardWrapp","RandomWheelWrapp"],"sourceRoot":""}