{"version":3,"file":"static/js/786.28590398.chunk.js","mappings":"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","sources":["pages/AnimatedPages.tsx","webpack://react-film-randomize/./src/pages/GamesPage/_Games.module.scss?7928","components/Games/Random_wheel/components/RandomWheel.tsx","webpack://react-film-randomize/./src/components/Games/Random_wheel/_RandomWheelWrapp.module.scss?eba9","webpack://react-film-randomize/./src/components/FilmWinner/_FilmWinner.module.scss?5032","components/FilmWinner/FilmWinner.tsx","components/Games/Random_wheel/RandomWheelWrapp.tsx","webpack://react-film-randomize/./src/components/Games/Random_card_out/_RandomCardOut.module.scss?5728","webpack://react-film-randomize/./src/components/Games/Random_card_out/components/_FilmCard.module.scss?6304","components/Games/Random_card_out/components/RandomCard.tsx","components/Games/Random_card_out/RandomCardOutWrapp.tsx","webpack://react-film-randomize/./src/components/Games/MysteryCardWrapp/_MysteryCardWrapp.module.scss?5d1c","webpack://react-film-randomize/./src/components/Games/MysteryCardWrapp/components/_MysteryCard.module.scss?668a","components/Games/MysteryCardWrapp/components/MysteryCard.tsx","components/Games/MysteryCardWrapp/MysteryCardWrapp.tsx","hooks/useShuffle.ts","pages/GamesPage/Games.tsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport React, { FC } from \"react\";\r\n\r\ntype ChildProps = { children: React.ReactElement };\r\n\r\nconst animations = {\r\n  initial: { opacity: 0, x: 50 },\r\n  animate: { opacity: 1, x: 0 },\r\n  exit: { opacity: 0, x: -50 },\r\n};\r\n\r\nconst AnimatedPage: FC<ChildProps> = ({ children }) => {\r\n  return (\r\n    <motion.div\r\n      variants={animations}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default AnimatedPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"FilmsChoisePage__background\":\"_Games_FilmsChoisePage__background__-skW2\",\"select\":\"_Games_select__aqdRO\",\"templateWrapp\":\"_Games_templateWrapp__KtAF-\",\"alert\":\"_Games_alert__+uPGX\",\"filmsWrapp\":\"_Games_filmsWrapp__P8h5r\"};","import { FC } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\n\r\ninterface WheelProps {\r\n  filmPlate: any;\r\n  prizeNumber: number;\r\n  mustSpin: boolean;\r\n  setMustSpin: (arg0: boolean) => void;\r\n}\r\n\r\nconst RandomWheel: FC<WheelProps> = ({\r\n  filmPlate,\r\n  prizeNumber,\r\n  mustSpin,\r\n  setMustSpin,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Wheel\r\n        mustStartSpinning={mustSpin}\r\n        prizeNumber={prizeNumber}\r\n        data={filmPlate}\r\n        outerBorderWidth={1}\r\n        radiusLineWidth={1}\r\n        innerRadius={11}\r\n        fontSize={11}\r\n        textDistance={61}\r\n        backgroundColors={[\"#020518\"]}\r\n        textColors={[\"white\"]}\r\n        innerBorderColor={\"red\"}\r\n        radiusLineColor={\"#ec8dc7\"}\r\n        outerBorderColor={\"rgba(238, 141, 200, 1)\"}\r\n        onStopSpinning={() => {\r\n          setMustSpin(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomWheel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"randomWheelWrapp\":\"_RandomWheelWrapp_randomWheelWrapp__3IuJ7\",\"wheelWrapper\":\"_RandomWheelWrapp_wheelWrapper__SKAOU\",\"addWinner\":\"_RandomWheelWrapp_addWinner__ufkc9\"};","// extracted by mini-css-extract-plugin\nexport default {\"filmWinner\":\"_FilmWinner_filmWinner__Ut8VV\",\"cardChoice\":\"_FilmWinner_cardChoice__cQuiC\",\"confetti\":\"_FilmWinner_confetti__qVUEA\",\"confettiPiece\":\"_FilmWinner_confettiPiece__ax0qw\",\"makeItRain\":\"_FilmWinner_makeItRain__+PNLk\"};","import { FC } from \"react\";\r\nimport Winner from \"./_FilmWinner.module.scss\";\r\nimport { IFilm } from \"../../models/IFilm\";\r\n\r\ninterface FilmCard {\r\n  winner?: IFilm;\r\n}\r\n\r\nconst FilmWinner: FC<FilmCard> = ({ winner }) => {\r\n  return (\r\n    <div className={Winner.confetti}>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.filmWinner}>{winner?.option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmWinner;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport { getRandNum } from \"../../../services/RandomOrgAPI\";\r\nimport RandomWheel from \"./components/RandomWheel\";\r\nimport Wheel from \"./_RandomWheelWrapp.module.scss\";\r\nimport { Button } from \"@mui/material\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\n\r\ninterface RandomWheelProps {\r\n  winner?: IFilm;\r\n  winnerBool: boolean;\r\n  setWinnerBool: (arg0: boolean) => void;\r\n}\r\n\r\nconst RandomWheelWrapp: FC<RandomWheelProps> = ({\r\n  winner,\r\n  winnerBool,\r\n  setWinnerBool,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { numbers, filmPlate, setFilmPlate, setAllFilms, allFilms } =\r\n    useContext(NumbersContext);\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [idFIlmWinner, setIdFIlmWinner] = useState<any>();\r\n  const [prizeNumber, setPrizeNumber] = useState<any>();\r\n  const [getRandom, { data: random, isSuccess }] =\r\n    getRandNum.useLazyGetRandNumQuery();\r\n  const randomNum = random?.result?.random?.data;\r\n\r\n  const handleSpinClick = async () => {\r\n    if (mustSpin) {\r\n      return mustSpin;\r\n    } else {\r\n      await getRandom(numbers?.length);\r\n      setMustSpin(true);\r\n    }\r\n  };\r\n  console.log(filmPlate);\r\n  useEffect(() => {\r\n    filmPlate?.map((film) => {\r\n      let index = filmPlate.findIndex((el) => el.id === numbers[randomNum!]);\r\n      return setPrizeNumber(index);\r\n    });\r\n    setIdFIlmWinner(numbers[randomNum!]);\r\n    isSuccess &&\r\n      setTimeout(() => {\r\n        setFilmPlate(filmPlate?.filter((film) => film.id !== idFIlmWinner));\r\n      }, 12500);\r\n  }, [random, idFIlmWinner]);\r\n\r\n  useEffect(() => {\r\n    if (filmPlate?.length === 1) {\r\n      setWinnerBool(true);\r\n      // filmPlate.map((film) => {\r\n      //   setAllFilms(allFilms.filter((item) => item.id !== film.id));\r\n      // });\r\n    }\r\n  }, [filmPlate]);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={Wheel.randomWheelWrapp}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={Wheel.wheelWrapper}>\r\n          <RandomWheel\r\n            setMustSpin={setMustSpin}\r\n            mustSpin={mustSpin}\r\n            prizeNumber={prizeNumber}\r\n            filmPlate={filmPlate}\r\n          />\r\n          <Button className={Wheel.addWinner} onClick={handleSpinClick}>\r\n            {t(\"gamesPage.randomWheel.button\")}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomWheelWrapp;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"randomCardWrapp\":\"_RandomCardOut_randomCardWrapp__TOq6S\",\"addWinner_button\":\"_RandomCardOut_addWinner_button__Cu7sP\",\"winnerWrapper\":\"_RandomCardOut_winnerWrapper__WyJSm\"};","// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"_FilmCard_filmCard__aSUp8\",\"cardChoice\":\"_FilmCard_cardChoice__nuEa0\",\"filmCardOut\":\"_FilmCard_filmCardOut__hTHJr\",\"CardOut\":\"_FilmCard_CardOut__Vgabo\"};","import React, { FC, useEffect, useState } from \"react\";\r\nimport { IFilm } from \"../../../../models/IFilm\";\r\nimport Card from \"./_FilmCard.module.scss\";\r\n\r\ninterface FilmCard {\r\n  film: IFilm;\r\n  droppedOut: number;\r\n}\r\n\r\nconst RandomCard: FC<FilmCard> = ({ film, droppedOut }) => {\r\n  const [hideWinner, setHideWinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (droppedOut === film.id) {\r\n      setHideWinner(true);\r\n    }\r\n  }, [droppedOut]);\r\n\r\n  return (\r\n    <div className={hideWinner ? Card.filmCardOut : Card.filmCard}>\r\n      <div className={Card.filmCard__title}>{film.option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomCard;\r\n","import { FC, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport CardOut from \"./_RandomCardOut.module.scss\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\nimport { getRandNum } from \"../../../services/RandomOrgAPI\";\r\nimport RandomCard from \"./components/RandomCard\";\r\nimport { Button } from \"@mui/material\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface RandomCardOutWrappProps {\r\n  winnerBool: boolean;\r\n  winner?: IFilm;\r\n}\r\n\r\nconst RandomCardOutWrapp: FC<RandomCardOutWrappProps> = ({\r\n  winnerBool,\r\n  winner,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { allFilms, numbers, filmPlate, setFilmPlate } =\r\n    useContext(NumbersContext);\r\n  const [getRandom, { data: random }] = getRandNum.useLazyGetRandNumQuery();\r\n  const [droppedOut, setDroppedOut] = useState<any>();\r\n  const pickAWinner = async () => {\r\n    await getRandom(numbers?.length);\r\n  };\r\n  console.log(filmPlate);\r\n\r\n  useEffect(() => {\r\n    filmPlate?.map((film) => {\r\n      return setDroppedOut(numbers[random?.result.random.data!]);\r\n    });\r\n    setFilmPlate(filmPlate?.filter((film) => film.id !== droppedOut));\r\n  }, [random, droppedOut]);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={CardOut.winnerWrapper}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={CardOut.randomCardWrapp}>\r\n          {allFilms &&\r\n            allFilms.map((film) => (\r\n              <RandomCard key={film.id} film={film} droppedOut={droppedOut} />\r\n            ))}\r\n          <Button className={CardOut.addWinner_button} onClick={pickAWinner}>\r\n            {t(\"gamesPage.randomCardOutWrapp.button\")}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomCardOutWrapp;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mysteryCardWrapp\":\"_MysteryCardWrapp_mysteryCardWrapp__Xkh-R\",\"winnerWrapper\":\"_MysteryCardWrapp_winnerWrapper__GFtQU\"};","// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"_MysteryCard_filmCard__gwvys\",\"shake\":\"_MysteryCard_shake__VOIvZ\",\"card\":\"_MysteryCard_card__yblMf\",\"filmCard__front\":\"_MysteryCard_filmCard__front__jc+17\",\"filmCard__back\":\"_MysteryCard_filmCard__back__9KdpV\",\"neon-1\":\"_MysteryCard_neon-1__Idxea\",\"isFlipped\":\"_MysteryCard_isFlipped__RBto9\",\"filmCardOut\":\"_MysteryCard_filmCardOut__CbVLQ\",\"CardOut\":\"_MysteryCard_CardOut__oXVMW\"};","import { FC, useState } from \"react\";\r\nimport { IFilm } from \"../../../../models/IFilm\";\r\nimport Card from \"./_MysteryCard.module.scss\";\r\n\r\ninterface FilmCard {\r\n  film: IFilm;\r\n  onDelete: (id: number) => void;\r\n}\r\n\r\nconst MysteryCard: FC<FilmCard> = ({ film, onDelete }) => {\r\n  const [hideWinner, setHideWinner] = useState(false);\r\n  const handleDelete = () => {\r\n    onDelete(film.id);\r\n    setHideWinner(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={hideWinner ? Card.filmCardOut : Card.filmCard}\r\n      onClick={handleDelete}\r\n    >\r\n      <div className={hideWinner ? Card.isFlipped : Card.card}>\r\n        <div className={Card.filmCard__back}>\r\n          {/* <div className={Card.filmCard__author}>{film.id}</div> */}\r\n          <div className={Card.filmCard__title}>{film.option}</div>\r\n        </div>\r\n        <div className={Card.filmCard__front}>\r\n          <div className={Card.filmCard__author}>?</div>\r\n          {/* <div className={Card.filmCard__title}></div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MysteryCard;\r\n","import { FC, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport Mystery from \"./_MysteryCardWrapp.module.scss\";\r\nimport MysteryCard from \"./components/MysteryCard\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useShuffle } from \"../../../hooks/useShuffle\";\r\n\r\ninterface MysteryCardOutWrappProps {\r\n  winnerBool: boolean;\r\n  winner?: IFilm;\r\n}\r\n\r\nconst MysteryCardWrapp: FC<MysteryCardOutWrappProps> = ({\r\n  winnerBool,\r\n  winner,\r\n}) => {\r\n  const { allFilms, filmPlate, setFilmPlate } = useContext(NumbersContext);\r\n  const [mysteryCard, setMysteryCard] = useState<IFilm[]>();\r\n  const shuffleAarray = [...allFilms];\r\n  const shafle = useShuffle(shuffleAarray!);\r\n  useMemo(() => setMysteryCard(shafle), [allFilms]);\r\n  const handleDelete = (id: number) => {\r\n    setFilmPlate(filmPlate.filter((film: IFilm) => film.id !== id));\r\n  };\r\n  console.log(filmPlate);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={Mystery.winnerWrapper}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={Mystery.mysteryCardWrapp}>\r\n          {mysteryCard &&\r\n            mysteryCard.map((film) => (\r\n              <MysteryCard onDelete={handleDelete} key={film.id} film={film} />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MysteryCardWrapp;\r\n","import { IFilm } from \"../models/IFilm\";\r\n\r\nfunction useShuffle(array: IFilm[]) {\r\n  let m = array?.length,\r\n    t,\r\n    i;\r\n  while (m) {\r\n    i = Math.floor(Math.random() * m--);\r\n    t = array[m];\r\n    array[m] = array[i];\r\n    array[i] = t;\r\n  }\r\n  return array;\r\n}\r\n\r\nexport { useShuffle };\r\n","import Games from \"./_Games.module.scss\";\r\nimport AnimatedPage from \"../AnimatedPages\";\r\nimport { Container } from \"@mui/material\";\r\nimport RandomWheelWrapp from \"../../components/Games/Random_wheel/RandomWheelWrapp\";\r\nimport RandomCardOutWrapp from \"../../components/Games/Random_card_out/RandomCardOutWrapp\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport MysteryCardWrapp from \"../../components/Games/MysteryCardWrapp/MysteryCardWrapp\";\r\nimport { NumbersContext } from \"../../context\";\r\nimport Select from \"react-select\";\r\nimport \"../../style/_custom-select-games.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IFilm } from \"../../models/IFilm\";\r\n\r\nconst FilmsTemplate = () => {\r\n  const { t } = useTranslation();\r\n  const [game, setGame] = useState<any>(0);\r\n  const { filmPlate, setAllFilms, allFilms } = useContext(NumbersContext);\r\n  const [winnerBool, setWinnerBool] = useState(false);\r\n  const [winner, setWinner] = useState<IFilm>();\r\n  useEffect(() => {\r\n    if (filmPlate.length === 0) {\r\n      setGame(4);\r\n    }\r\n  }, []);\r\n\r\n  const options = [\r\n    { value: 1, label: t(\"gamesPage.select.eliminationCards\") },\r\n    { value: 2, label: t(\"gamesPage.select.randomWheel\") },\r\n    { value: 3, label: t(\"gamesPage.select.choiceCard\") },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (game.value === 2) {\r\n      if (filmPlate?.length === 1) {\r\n        setTimeout(() => {\r\n          setWinnerBool(true);\r\n          filmPlate.map((film) => {\r\n            setWinner(film);\r\n            const updateFilms = allFilms.filter((item) => item.id !== film.id);\r\n            const newAllFilms = updateFilms.map((film) => {\r\n              if (film.value === 10) {\r\n                return {\r\n                  ...film,\r\n                  value: 10,\r\n                  optionSize: 1,\r\n                  quantity: 10,\r\n                };\r\n              } else {\r\n                return {\r\n                  ...film,\r\n                  value: film.value + 1,\r\n                  optionSize: film.optionSize - 1,\r\n                  quantity: Math.floor(100 - film.value * 10),\r\n                };\r\n              }\r\n            });\r\n            setAllFilms(newAllFilms);\r\n          });\r\n        }, 0);\r\n      }\r\n    } else {\r\n      if (filmPlate?.length === 1) {\r\n        setTimeout(() => {\r\n          setWinnerBool(true);\r\n          filmPlate.map((film) => {\r\n            setWinner(film);\r\n            const updateFilms = allFilms.filter((item) => item.id !== film.id);\r\n            const newAllFilms = updateFilms.map((film) => {\r\n              if (film.value === 10) {\r\n                return {\r\n                  ...film,\r\n                  value: 10,\r\n                  optionSize: 1,\r\n                  quantity: 10,\r\n                };\r\n              } else {\r\n                return {\r\n                  ...film,\r\n                  value: film.value + 1,\r\n                  optionSize: film.optionSize - 1,\r\n                  quantity: Math.floor(100 - film.value * 10),\r\n                };\r\n              }\r\n            });\r\n            setAllFilms(newAllFilms);\r\n          });\r\n        }, 3500);\r\n      }\r\n    }\r\n  }, [allFilms, filmPlate]);\r\n\r\n  return (\r\n    <AnimatedPage>\r\n      <div className={Games.FilmsChoisePage__background}>\r\n        <></>\r\n        <Container\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Select\r\n            className={Games.select}\r\n            classNamePrefix=\"customSelect\"\r\n            isDisabled={game === 4 || game === 5 ? true : false}\r\n            isSearchable={false}\r\n            options={options}\r\n            value={game}\r\n            onChange={setGame}\r\n            placeholder={\r\n              game === 0\r\n                ? t(\"gamesPage.select.placeholder1\")\r\n                : t(\"gamesPage.select.placeholder2\")\r\n            }\r\n            styles={{\r\n              control: (baseStyles) => ({\r\n                ...baseStyles,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 30px\",\r\n              }),\r\n            }}\r\n          />\r\n          <div className={Games.templateWrapp}>\r\n            <div className={Games.alert}>\r\n              {game === 0 ? (\r\n                <h3>{t(\"gamesPage.addingMessage.chooseAGame\")}</h3>\r\n              ) : null}\r\n              {game === 4 ? (\r\n                <h3>{t(\"gamesPage.addingMessage.YouHaveNotAddedAnyMovies\")}</h3>\r\n              ) : null}\r\n              {game === 5 ? (\r\n                <h3>\r\n                  {t(\"gamesPage.addingMessage.addingOneMovieDoesNotMakeSense\")}\r\n                </h3>\r\n              ) : null}\r\n            </div>\r\n            {game.value === 1 ? (\r\n              <RandomCardOutWrapp winner={winner} winnerBool={winnerBool} />\r\n            ) : null}\r\n            {game.value === 3 ? (\r\n              <MysteryCardWrapp winner={winner} winnerBool={winnerBool} />\r\n            ) : null}\r\n            {game.value === 2 ? (\r\n              <RandomWheelWrapp\r\n                winner={winner}\r\n                winnerBool={winnerBool}\r\n                setWinnerBool={setWinnerBool}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </AnimatedPage>\r\n  );\r\n};\r\n\r\nexport default FilmsTemplate;\r\n"],"names":["animations","initial","opacity","x","animate","exit","_ref","children","_jsx","motion","div","variants","transition","duration","filmPlate","prizeNumber","mustSpin","setMustSpin","_Fragment","Wheel","mustStartSpinning","data","outerBorderWidth","radiusLineWidth","innerRadius","fontSize","textDistance","backgroundColors","textColors","innerBorderColor","radiusLineColor","outerBorderColor","onStopSpinning","winner","_jsxs","className","Winner","option","_random$result","_random$result$random","winnerBool","setWinnerBool","t","useTranslation","_useContext","useContext","NumbersContext","numbers","setFilmPlate","_useState","setAllFilms","allFilms","useState","_useState2","_slicedToArray","_useState3","_useState4","idFIlmWinner","setIdFIlmWinner","_useState5","_useState6","setPrizeNumber","_getRandNum$useLazyGe","getRandNum","useLazyGetRandNumQuery","_getRandNum$useLazyGe2","getRandom","_getRandNum$useLazyGe3","random","isSuccess","randomNum","result","handleSpinClick","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","length","stop","apply","arguments","console","log","useEffect","map","film","index","findIndex","el","id","setTimeout","filter","FilmWinner","RandomWheel","Button","onClick","droppedOut","hideWinner","setHideWinner","Card","filmCardOut","filmCard","filmCard__title","setDroppedOut","pickAWinner","CardOut","RandomCard","onDelete","isFlipped","card","filmCard__back","filmCard__front","filmCard__author","mysteryCard","setMysteryCard","shafle","array","i","m","Math","floor","useShuffle","_toConsumableArray","useMemo","handleDelete","Mystery","MysteryCard","game","setGame","setWinner","options","value","label","newAllFilms","item","_objectSpread","optionSize","quantity","AnimatedPage","Games","Container","sx","display","flexDirection","alignItems","Select","classNamePrefix","isDisabled","isSearchable","onChange","placeholder","styles","control","baseStyles","borderRadius","padding","RandomCardOutWrapp","MysteryCardWrapp","RandomWheelWrapp"],"sourceRoot":""}