{"version":3,"file":"static/js/144.5b2049e0.chunk.js","mappings":"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","sources":["webpack://react-film-randomize/./src/components/FilmWinner/_FilmWinner.module.scss?5032","components/FilmWinner/FilmWinner.tsx","webpack://react-film-randomize/./src/components/Games/Random_card_out/components/_FilmCard.module.scss?6304","components/Games/Random_card_out/components/RandomCard.tsx","hooks/useShuffle.ts","pages/AnimatedPages.tsx","components/Games/Random_wheel/components/RandomWheelLobby.tsx","components/Games/Random_wheel/RandomWheelWrappLobby.tsx","components/Games/Random_card_out/RandomCardOutLobby.tsx","components/Games/MysteryCardWrapp/components/MysteryCardLobby.tsx","components/Games/MysteryCardWrapp/MysteryCardWrappLobby.tsx","pages/GamesPage/GamesLobby.tsx","webpack://react-film-randomize/./src/components/Games/MysteryCardWrapp/_MysteryCardWrapp.module.scss?5d1c","webpack://react-film-randomize/./src/components/Games/MysteryCardWrapp/components/_MysteryCard.module.scss?668a","webpack://react-film-randomize/./src/components/Games/Random_card_out/_RandomCardOut.module.scss?5728","webpack://react-film-randomize/./src/components/Games/Random_wheel/_RandomWheelWrapp.module.scss?eba9","webpack://react-film-randomize/./src/pages/GamesPage/_Games.module.scss?7928"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmWinner\":\"_FilmWinner_filmWinner__Ut8VV\",\"cardChoice\":\"_FilmWinner_cardChoice__cQuiC\",\"confetti\":\"_FilmWinner_confetti__qVUEA\",\"confettiPiece\":\"_FilmWinner_confettiPiece__ax0qw\",\"makeItRain\":\"_FilmWinner_makeItRain__+PNLk\"};","import { FC } from \"react\";\r\nimport Winner from \"./_FilmWinner.module.scss\";\r\nimport { IFilm } from \"../../models/IFilm\";\r\n\r\ninterface FilmCard {\r\n  winner?: IFilm;\r\n}\r\n\r\nconst FilmWinner: FC<FilmCard> = ({ winner }) => {\r\n  return (\r\n    <div className={Winner.confetti}>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.confettiPiece}></div>\r\n      <div className={Winner.filmWinner}>{winner?.option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilmWinner;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"_FilmCard_filmCard__aSUp8\",\"cardChoice\":\"_FilmCard_cardChoice__nuEa0\",\"filmCardOut\":\"_FilmCard_filmCardOut__hTHJr\",\"CardOut\":\"_FilmCard_CardOut__Vgabo\"};","import React, { FC, useEffect, useState } from \"react\";\r\nimport { IFilm } from \"../../../../models/IFilm\";\r\nimport Card from \"./_FilmCard.module.scss\";\r\n\r\ninterface FilmCard {\r\n  film: IFilm;\r\n  droppedOut: number;\r\n}\r\n\r\nconst RandomCard: FC<FilmCard> = ({ film, droppedOut }) => {\r\n  const [hideWinner, setHideWinner] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (droppedOut === film.id) {\r\n      setHideWinner(true);\r\n    }\r\n  }, [droppedOut]);\r\n\r\n  return (\r\n    <div className={hideWinner ? Card.filmCardOut : Card.filmCard}>\r\n      <div className={Card.filmCard__title}>{film.option}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomCard;\r\n","import { IFilm } from \"../models/IFilm\";\r\n\r\nfunction useShuffle(array: IFilm[]) {\r\n  let m = array?.length,\r\n    t,\r\n    i;\r\n  while (m) {\r\n    i = Math.floor(Math.random() * m--);\r\n    t = array[m];\r\n    array[m] = array[i];\r\n    array[i] = t;\r\n  }\r\n  return array;\r\n}\r\n\r\nexport { useShuffle };\r\n","import { motion } from \"framer-motion\";\r\nimport React, { FC } from \"react\";\r\n\r\ntype ChildProps = { children: React.ReactElement };\r\n\r\nconst animations = {\r\n  initial: { opacity: 0, x: 50 },\r\n  animate: { opacity: 1, x: 0 },\r\n  exit: { opacity: 0, x: -50 },\r\n};\r\n\r\nconst AnimatedPage: FC<ChildProps> = ({ children }) => {\r\n  return (\r\n    <motion.div\r\n      variants={animations}\r\n      initial=\"initial\"\r\n      animate=\"animate\"\r\n      exit=\"exit\"\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      {children}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default AnimatedPage;\r\n","import { FC } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\nimport { IFilmLobby } from \"../../../../models/IFilmLobby\";\r\n\r\ninterface WheelProps {\r\n  lobbyFilmsPlate: IFilmLobby[];\r\n  prizeNumber: number;\r\n  mustSpin: boolean;\r\n  setMustSpin: (arg0: boolean) => void;\r\n}\r\n\r\nconst RandomWheelLobby: FC<WheelProps> = ({\r\n  lobbyFilmsPlate,\r\n  prizeNumber,\r\n  mustSpin,\r\n  setMustSpin,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Wheel\r\n        mustStartSpinning={mustSpin}\r\n        prizeNumber={prizeNumber}\r\n        data={lobbyFilmsPlate}\r\n        outerBorderWidth={1}\r\n        radiusLineWidth={1}\r\n        innerRadius={11}\r\n        fontSize={10}\r\n        textDistance={55}\r\n        backgroundColors={[\"#020518\"]}\r\n        textColors={[\"white\"]}\r\n        innerBorderColor={\"red\"}\r\n        radiusLineColor={\"#ec8dc7\"}\r\n        outerBorderColor={\"rgba(238, 141, 200, 1)\"}\r\n        onStopSpinning={() => {\r\n          setMustSpin(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomWheelLobby;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport { getRandNum } from \"../../../services/RandomOrgAPI\";\r\nimport RandomWheelLobby from \"./components/RandomWheelLobby\";\r\nimport Wheel from \"./_RandomWheelWrapp.module.scss\";\r\nimport { Button } from \"@mui/material\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IFilmLobby } from \"../../../models/IFilmLobby\";\r\n\r\ninterface RandomWheelProps {\r\n  winner?: IFilm;\r\n  winnerBool: boolean;\r\n  setWinnerBool: (arg0: boolean) => void;\r\n}\r\n\r\nconst RandomWheelWrappLobby: FC<RandomWheelProps> = ({\r\n  winner,\r\n  winnerBool,\r\n  setWinnerBool,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { numbersLobby, lobbyFilmsPlate, setLobbyFilmsPlate, socket } =\r\n    useContext(NumbersContext);\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState<any>();\r\n  const [getRandom, { data: random, isSuccess }] =\r\n    getRandNum.useLazyGetRandNumQuery();\r\n  const randomNum = random?.result?.random?.data;\r\n  const params = useParams();\r\n\r\n  // хендлер запуска колеса рандома с обращением к api randomOrg\r\n  const handleSpinClick = async () => {\r\n    if (mustSpin) {\r\n      return mustSpin;\r\n    } else {\r\n      await getRandom(numbersLobby?.length);\r\n      socket.emit(\"MustSpin\", true);\r\n    }\r\n  };\r\n\r\n  // отправка на сервер данных о лобби\r\n  useEffect(() => {\r\n    socket.emit(\"RandomWheelGame\", params);\r\n  }, []);\r\n\r\n  // обработчик ответа от сервера\r\n  useEffect(() => {\r\n    socket.on(\"responseMustSpin\", (data: boolean) => setMustSpin(data));\r\n    socket.on(\"responsePrizeNumber\", (data: number) => setPrizeNumber(data));\r\n    socket.on(\"responseRandomWheelGame\", (data: IFilmLobby[]) =>\r\n      setLobbyFilmsPlate(data)\r\n    );\r\n  }, [socket, random]);\r\n\r\n  // обработчик логики выбывания фильма\r\n  useEffect(() => {\r\n    //получаем индекс выбывшего фильма\r\n    lobbyFilmsPlate?.map((film) => {\r\n      let index = lobbyFilmsPlate.findIndex(\r\n        (el) => el.id === numbersLobby[randomNum!]\r\n      );\r\n      // отправляем его на сервер\r\n      socket.emit(\"PrizeNumber\", index);\r\n    });\r\n    // удаляем фильм с задержкой равной времени прокрутки колеса\r\n    isSuccess &&\r\n      setTimeout(() => {\r\n        socket.emit(\"RemoveFilm\", numbersLobby[randomNum!]);\r\n      }, 12500);\r\n  }, [random, socket]);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={Wheel.randomWheelWrapp}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={Wheel.wheelWrapper}>\r\n          <RandomWheelLobby\r\n            setMustSpin={setMustSpin}\r\n            mustSpin={mustSpin}\r\n            prizeNumber={prizeNumber}\r\n            lobbyFilmsPlate={lobbyFilmsPlate}\r\n          />\r\n          <Button className={Wheel.addWinner} onClick={handleSpinClick}>\r\n            {t(\"gamesPage.randomWheel.button\")}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomWheelWrappLobby;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport CardOut from \"./_RandomCardOut.module.scss\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\nimport { getRandNum } from \"../../../services/RandomOrgAPI\";\r\nimport RandomCard from \"./components/RandomCard\";\r\nimport { Button } from \"@mui/material\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IFilmLobby } from \"../../../models/IFilmLobby\";\r\n\r\ninterface RandomCardOutWrappProps {\r\n  winnerBool: boolean;\r\n  winner?: IFilm;\r\n}\r\n\r\nconst RandomCardOutLobby: FC<RandomCardOutWrappProps> = ({\r\n  winnerBool,\r\n  winner,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { lobbyAllFilms, numbersLobby, setLobbyFilmsPlate, socket } =\r\n    useContext(NumbersContext);\r\n  const [getRandom, { data: random }] = getRandNum.useLazyGetRandNumQuery();\r\n  const [droppedOut, setDroppedOut] = useState<any>();\r\n  const params = useParams();\r\n\r\n  // хендлер с обращением к api randomOrg\r\n  const pickAWinner = async () => {\r\n    await getRandom(numbersLobby?.length);\r\n  };\r\n\r\n  // обработчик выбора рандомного фильма и отправка его на сервер\r\n  useEffect(() => {\r\n    socket.emit(\r\n      \"RandomCardOutGame\",\r\n      numbersLobby[random?.result?.random?.data!],\r\n      params\r\n    );\r\n  }, [random]);\r\n\r\n  // обработчик ответа сервера с удалением отправленного фильма\r\n  useEffect(() => {\r\n    socket.on(\"responseRandomCardOutGame\", (lobbyFilms: IFilmLobby[]) =>\r\n      setLobbyFilmsPlate(lobbyFilms)\r\n    );\r\n    socket.on(\"responseDroppedOutID\", (data: number) => {\r\n      if (droppedOut !== data) {\r\n        setDroppedOut(data);\r\n      }\r\n    });\r\n  }, [setLobbyFilmsPlate, socket]);\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={CardOut.winnerWrapper}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={CardOut.randomCardWrapp}>\r\n          {lobbyAllFilms &&\r\n            lobbyAllFilms.map((film) => (\r\n              <RandomCard key={film.id} film={film} droppedOut={droppedOut} />\r\n            ))}\r\n          <Button className={CardOut.addWinner_button} onClick={pickAWinner}>\r\n            {t(\"gamesPage.randomCardOutWrapp.button\")}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomCardOutLobby;\r\n","import { FC, useContext, useEffect, useState } from \"react\";\r\nimport { IFilm } from \"../../../../models/IFilm\";\r\nimport Card from \"./_MysteryCard.module.scss\";\r\nimport { NumbersContext } from \"../../../../context\";\r\n\r\ninterface FilmCard {\r\n  film: IFilm;\r\n  onDelete: (id: number) => void;\r\n}\r\n\r\nconst MysteryCardLobby: FC<FilmCard> = ({ film, onDelete }) => {\r\n  const { socket } = useContext(NumbersContext);\r\n  const [hideWinner, setHideWinner] = useState(false);\r\n\r\n  // обработчик ответа от сервера на скрывание вылетевшего фильма\r\n  useEffect(() => {\r\n    socket.on(\"responseHideWinner\", (bool: boolean, filmID: number) => {\r\n      if (filmID === film.id) {\r\n        setHideWinner(bool);\r\n      }\r\n    });\r\n  }, [socket, hideWinner, onDelete]);\r\n\r\n  // хендлер на удаление фильма и отправка данных о нем на сервер\r\n  const handleDelete = () => {\r\n    onDelete(film.id);\r\n    socket.emit(\"HideWinner\", true, film.id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={hideWinner ? Card.filmCardOut : Card.filmCard}\r\n      onClick={handleDelete}\r\n    >\r\n      <div className={hideWinner ? Card.isFlipped : Card.card}>\r\n        <div className={Card.filmCard__back}>\r\n          <div className={Card.filmCard__title}>{film.option}</div>\r\n        </div>\r\n        <div className={Card.filmCard__front}>\r\n          <div className={Card.filmCard__author}>?</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MysteryCardLobby;\r\n","import { FC, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { NumbersContext } from \"../../../context\";\r\nimport Mystery from \"./_MysteryCardWrapp.module.scss\";\r\nimport MysteryCardLobby from \"./components/MysteryCardLobby\";\r\nimport { IFilm } from \"../../../models/IFilm\";\r\nimport FilmWinner from \"../../FilmWinner/FilmWinner\";\r\nimport { useShuffle } from \"../../../hooks/useShuffle\";\r\nimport { IFilmLobby } from \"../../../models/IFilmLobby\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface MysteryCardOutWrappProps {\r\n  winnerBool: boolean;\r\n  winner?: IFilmLobby;\r\n}\r\n\r\nconst MysteryCardWrappLobby: FC<MysteryCardOutWrappProps> = ({\r\n  winnerBool,\r\n  winner,\r\n}) => {\r\n  const { lobbyAllFilms, lobbyFilmsPlate, setLobbyFilmsPlate, socket } =\r\n    useContext(NumbersContext);\r\n  const [mysteryCard, setMysteryCard] = useState<IFilm[]>();\r\n  const shuffleAarray = [...lobbyAllFilms];\r\n  const shafle = useShuffle(shuffleAarray!);\r\n  useMemo(() => setMysteryCard(shafle), [lobbyAllFilms]);\r\n  const params = useParams();\r\n\r\n  // обработчик ответа с сервера на удаление вылетевшего фильма\r\n  useEffect(() => {\r\n    socket.on(\"responseMysteryCard\", (data: IFilmLobby[]) =>\r\n      setLobbyFilmsPlate(data)\r\n    );\r\n  }, [socket, lobbyFilmsPlate]);\r\n\r\n  // хендлер на удаление фильма и отправка данных о нем на сервер\r\n  const handleDelete = (id: number) => {\r\n    socket.emit(\"MysteryCard\", id, params);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {winnerBool ? (\r\n        <div className={Mystery.winnerWrapper}>\r\n          <FilmWinner winner={winner} />\r\n        </div>\r\n      ) : (\r\n        <div className={Mystery.mysteryCardWrapp}>\r\n          {mysteryCard &&\r\n            mysteryCard.map((film) => (\r\n              <MysteryCardLobby\r\n                onDelete={handleDelete}\r\n                key={film.id}\r\n                film={film}\r\n              />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MysteryCardWrappLobby;\r\n","import Games from \"./_Games.module.scss\";\r\nimport AnimatedPage from \"../AnimatedPages\";\r\nimport { Container } from \"@mui/material\";\r\nimport RandomWheelWrappLobby from \"../../components/Games/Random_wheel/RandomWheelWrappLobby\";\r\nimport RandomCardOutWrappLobby from \"../../components/Games/Random_card_out/RandomCardOutLobby\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport MysteryCardWrappLobby from \"../../components/Games/MysteryCardWrapp/MysteryCardWrappLobby\";\r\nimport { NumbersContext } from \"../../context\";\r\nimport Select from \"react-select\";\r\nimport \"../../style/_custom-select-games.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { IFilmLobby } from \"../../models/IFilmLobby\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst FilmsTemplate = () => {\r\n  const { t } = useTranslation();\r\n  const [game, setGame] = useState<any>(0);\r\n  const { lobbyFilmsPlate, setLobbyFilmsPlate, socket } =\r\n    useContext(NumbersContext);\r\n  const [winnerBool, setWinnerBool] = useState(false);\r\n  const [winner, setWinner] = useState<IFilmLobby>();\r\n  const params = useParams();\r\n\r\n  // Вывод сообщения что фильмы не заполнены\r\n  useEffect(() => {\r\n    if (lobbyFilmsPlate.length === 0) {\r\n      setGame(4);\r\n    }\r\n  }, []);\r\n\r\n  // востановление фильмов после смены игры\r\n  useEffect(() => {\r\n    if (game.value === 1 || game.value === 2 || game.value === 3) {\r\n      socket.emit(\"RefreshGameFilms\", params);\r\n      socket.on(\"RefreshFilms\", (data: IFilmLobby[]) =>\r\n        setLobbyFilmsPlate(data)\r\n      );\r\n    }\r\n  }, [game, socket]);\r\n\r\n  // значения селекта и названия игр\r\n  const options = [\r\n    { value: 1, label: t(\"gamesPage.select.eliminationCards\") },\r\n    { value: 2, label: t(\"gamesPage.select.randomWheel\") },\r\n    { value: 3, label: t(\"gamesPage.select.choiceCard\") },\r\n  ];\r\n\r\n  // обработчик победителя игры и вывода его на экране с разным таймингом на колесе, и на других играх\r\n  useEffect(() => {\r\n    // если выбранно колесо\r\n    if (game.value === 2) {\r\n      if (lobbyFilmsPlate?.length === 1) {\r\n        setTimeout(() => {\r\n          setWinnerBool(true);\r\n          lobbyFilmsPlate.map((film) => {\r\n            return setWinner(film);\r\n          });\r\n        }, 0);\r\n      }\r\n      // если выбранны остальные игры\r\n    } else {\r\n      if (lobbyFilmsPlate?.length === 1) {\r\n        setTimeout(() => {\r\n          setWinnerBool(true);\r\n          lobbyFilmsPlate.map((film) => {\r\n            return setWinner(film);\r\n          });\r\n        }, 3500);\r\n      }\r\n    }\r\n  }, [game.value, lobbyFilmsPlate]);\r\n\r\n  return (\r\n    <AnimatedPage>\r\n      <div className={Games.FilmsChoisePage__background}>\r\n        <Container\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ color: \"red\" }}>test server</div>\r\n          <Select\r\n            className={Games.select}\r\n            classNamePrefix=\"customSelect\"\r\n            isDisabled={game === 4 || game === 5 ? true : false}\r\n            isSearchable={false}\r\n            options={options}\r\n            value={game}\r\n            onChange={setGame}\r\n            placeholder={\r\n              game === 0\r\n                ? t(\"gamesPage.select.placeholder1\")\r\n                : t(\"gamesPage.select.placeholder2\")\r\n            }\r\n            styles={{\r\n              control: (baseStyles) => ({\r\n                ...baseStyles,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 30px\",\r\n              }),\r\n            }}\r\n          />\r\n          <div className={Games.templateWrapp}>\r\n            <div className={Games.alert}>\r\n              {game === 0 ? (\r\n                <h3>{t(\"gamesPage.addingMessage.chooseAGame\")}</h3>\r\n              ) : null}\r\n              {game === 4 ? (\r\n                <h3>{t(\"gamesPage.addingMessage.YouHaveNotAddedAnyMovies\")}</h3>\r\n              ) : null}\r\n              {game === 5 ? (\r\n                <h3>\r\n                  {t(\"gamesPage.addingMessage.addingOneMovieDoesNotMakeSense\")}\r\n                </h3>\r\n              ) : null}\r\n            </div>\r\n            {game.value === 1 ? (\r\n              <RandomCardOutWrappLobby\r\n                winner={winner}\r\n                winnerBool={winnerBool}\r\n              />\r\n            ) : null}\r\n            {game.value === 2 ? (\r\n              <RandomWheelWrappLobby\r\n                winner={winner}\r\n                winnerBool={winnerBool}\r\n                setWinnerBool={setWinnerBool}\r\n              />\r\n            ) : null}\r\n            {game.value === 3 ? (\r\n              <MysteryCardWrappLobby winner={winner} winnerBool={winnerBool} />\r\n            ) : null}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </AnimatedPage>\r\n  );\r\n};\r\n\r\nexport default FilmsTemplate;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mysteryCardWrapp\":\"_MysteryCardWrapp_mysteryCardWrapp__Xkh-R\",\"winnerWrapper\":\"_MysteryCardWrapp_winnerWrapper__GFtQU\"};","// extracted by mini-css-extract-plugin\nexport default {\"filmCard\":\"_MysteryCard_filmCard__gwvys\",\"shake\":\"_MysteryCard_shake__VOIvZ\",\"card\":\"_MysteryCard_card__yblMf\",\"filmCard__front\":\"_MysteryCard_filmCard__front__jc+17\",\"filmCard__back\":\"_MysteryCard_filmCard__back__9KdpV\",\"neon-1\":\"_MysteryCard_neon-1__Idxea\",\"isFlipped\":\"_MysteryCard_isFlipped__RBto9\",\"filmCardOut\":\"_MysteryCard_filmCardOut__CbVLQ\",\"CardOut\":\"_MysteryCard_CardOut__oXVMW\"};","// extracted by mini-css-extract-plugin\nexport default {\"randomCardWrapp\":\"_RandomCardOut_randomCardWrapp__TOq6S\",\"addWinner_button\":\"_RandomCardOut_addWinner_button__Cu7sP\",\"winnerWrapper\":\"_RandomCardOut_winnerWrapper__WyJSm\"};","// extracted by mini-css-extract-plugin\nexport default {\"randomWheelWrapp\":\"_RandomWheelWrapp_randomWheelWrapp__3IuJ7\",\"wheelWrapper\":\"_RandomWheelWrapp_wheelWrapper__SKAOU\",\"addWinner\":\"_RandomWheelWrapp_addWinner__ufkc9\"};","// extracted by mini-css-extract-plugin\nexport default {\"FilmsChoisePage__background\":\"_Games_FilmsChoisePage__background__-skW2\",\"select\":\"_Games_select__aqdRO\",\"templateWrapp\":\"_Games_templateWrapp__KtAF-\",\"alert\":\"_Games_alert__+uPGX\",\"filmsWrapp\":\"_Games_filmsWrapp__P8h5r\"};"],"names":["_ref","winner","_jsxs","className","Winner","children","_jsx","option","film","droppedOut","hideWinner","setHideWinner","useState","useEffect","id","Card","filmCardOut","filmCard","filmCard__title","useShuffle","array","t","i","m","length","Math","floor","random","animations","initial","opacity","x","animate","exit","motion","div","variants","transition","duration","lobbyFilmsPlate","prizeNumber","mustSpin","setMustSpin","_Fragment","Wheel","mustStartSpinning","data","outerBorderWidth","radiusLineWidth","innerRadius","fontSize","textDistance","backgroundColors","textColors","innerBorderColor","radiusLineColor","outerBorderColor","onStopSpinning","_random$result","_random$result$random","winnerBool","setWinnerBool","useTranslation","numbersLobby","setLobbyFilmsPlate","socket","useContext","NumbersContext","setPrizeNumber","getRandom","isSuccess","getRandNum","useLazyGetRandNumQuery","randomNum","result","params","useParams","emit","on","map","index","findIndex","el","setTimeout","randomWheelWrapp","FilmWinner","wheelWrapper","RandomWheelLobby","Button","addWinner","onClick","async","lobbyAllFilms","setDroppedOut","lobbyFilms","CardOut","winnerWrapper","randomCardWrapp","RandomCard","addWinner_button","onDelete","bool","filmID","handleDelete","isFlipped","card","filmCard__back","filmCard__front","filmCard__author","mysteryCard","setMysteryCard","shuffleAarray","shafle","useMemo","Mystery","mysteryCardWrapp","MysteryCardLobby","FilmsTemplate","game","setGame","setWinner","value","options","label","AnimatedPage","Games","FilmsChoisePage__background","Container","sx","display","flexDirection","alignItems","style","color","Select","select","classNamePrefix","isDisabled","isSearchable","onChange","placeholder","styles","control","baseStyles","borderRadius","padding","templateWrapp","alert","RandomCardOutWrappLobby","RandomWheelWrappLobby","MysteryCardWrappLobby"],"sourceRoot":""}